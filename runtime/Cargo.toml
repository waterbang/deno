# Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_runtime"
version = "0.58.0"
authors = ["the Deno authors"]
edition = "2021"
license = "MIT"
repository = "https://github.com/denoland/deno"
description = "Provides the deno runtime library"

[features]
# "fake" feature that allows to generate docs on docs.rs
docsrs = []
standalone = [
  "deno_broadcast_channel/standalone",
  "deno_console/standalone",
  "deno_core/standalone",
  "deno_crypto/standalone",
  "deno_fetch/standalone",
  "deno_ffi/standalone",
  "deno_http/standalone",
  "deno_net/standalone",
  "deno_tls/standalone",
  "deno_url/standalone",
  "deno_web/standalone",
  "deno_webgpu/standalone",
  "deno_webidl/standalone",
  "deno_websocket/standalone",
  "deno_webstorage/standalone",
]

[lib]
name = "deno_runtime"
path = "lib.rs"

[[example]]
name = "hello_runtime"
path = "examples/hello_runtime.rs"

[build-dependencies]
deno_broadcast_channel = { version = "0.44.0", path = "../ext/broadcast_channel" }
deno_console = { version = "0.50.0", path = "../ext/console" }
deno_core = { version = "0.132.0", path = "../core" }
deno_crypto = { version = "0.64.0", path = "../ext/crypto" }
deno_fetch = { version = "0.73.0", path = "../ext/fetch" }
deno_ffi = { version = "0.37.0", path = "../ext/ffi" }
deno_http = { version = "0.44.0", path = "../ext/http" }
deno_net = { version = "0.42.0", path = "../ext/net" }
deno_tls = { version = "0.37.0", path = "../ext/tls" }
deno_url = { version = "0.50.0", path = "../ext/url" }
deno_web = { version = "0.81.0", path = "../ext/web" }
deno_webgpu = { version = "0.51.0", path = "../ext/webgpu" }
deno_webidl = { version = "0.50.0", path = "../ext/webidl" }
deno_websocket = { version = "0.55.0", path = "../ext/websocket" }
deno_webstorage = { version = "0.45.0", path = "../ext/webstorage" }

lzzzz = '=0.8.0'

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.11"
winapi = "0.3.9"

[dependencies]
deno_broadcast_channel = { version = "0.44.0", path = "../ext/broadcast_channel" }
deno_console = { version = "0.50.0", path = "../ext/console" }
deno_core = { version = "0.132.0", path = "../core" }
deno_crypto = { version = "0.64.0", path = "../ext/crypto" }
deno_fetch = { version = "0.73.0", path = "../ext/fetch" }
deno_ffi = { version = "0.37.0", path = "../ext/ffi" }
deno_http = { version = "0.44.0", path = "../ext/http" }
deno_net = { version = "0.42.0", path = "../ext/net" }
deno_tls = { version = "0.37.0", path = "../ext/tls" }
deno_url = { version = "0.50.0", path = "../ext/url" }
deno_web = { version = "0.81.0", path = "../ext/web" }
deno_webgpu = { version = "0.51.0", path = "../ext/webgpu" }
deno_webidl = { version = "0.50.0", path = "../ext/webidl" }
deno_websocket = { version = "0.55.0", path = "../ext/websocket" }
deno_webstorage = { version = "0.45.0", path = "../ext/webstorage" }

atty = "0.2.14"
dlopen = "0.1.8"
encoding_rs = "0.8.29"
filetime = "0.2.15"
fs3 = "0.5.0"
http = "0.2.4"
hyper = { version = "0.14.12", features = ["server", "stream", "http1", "http2", "runtime"] }
libc = "0.2.121"
log = "0.4.14"
lzzzz = '=0.8.0'
netif = "0.1.3"
notify = "=5.0.0-pre.14"
once_cell = "1.10.0"
regex = "1.5.5"
ring = "0.16.20"
serde = { version = "1.0.129", features = ["derive"] }
signal-hook-registry = "1.4.0"
sys-info = "0.9.0"
termcolor = "1.1.2"
tokio = { version = "1.17", features = ["full"] }
uuid = { version = "0.8.2", features = ["v4"] }

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = ["commapi", "knownfolders", "mswsock", "objbase", "shlobj", "tlhelp32", "winbase", "winerror", "winsock2"] }

[target.'cfg(unix)'.dependencies]
nix = "=0.23.0"

[dev-dependencies]
# Used in benchmark
test_util = { path = "../test_util" }

[package.metadata.docs.rs]
features = ["docsrs"]
